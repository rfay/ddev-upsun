name: upsun

project_files:
  - upsun/install-hook.php
  - upsun/UpsunConfigParserInterface.php
  - upsun/UpsunConfigParser.php
  - upsun/FixedConfigDetector.php
  - upsun/FixedConfigParser.php
  - upsun/DdevConfigGenerator.php
  - upsun/PlatformEnvironmentGenerator.php
  - upsun/EnvironmentLoader.php
  - upsun/ServiceDetector.php
  - upsun/debug-parser.php

post_install_actions:
  - |
    #ddev-description Write DDEV environment variables for PHP step
    # TEMPORARY WORKAROUND: Write missing DDEV env vars to file for PHP step
    # TODO: Remove when DDEV provides these variables to PHP add-on context
    # Based on https://docs.ddev.com/en/stable/users/extend/custom-commands/#environment-variables-provided
    echo "# Temporary DDEV environment variables for add-on" > .env.temp
    echo "DDEV_PRIMARY_URL=${DDEV_PRIMARY_URL:-}" >> .env.temp
    echo "DDEV_PRIMARY_URL_WITHOUT_PORT=${DDEV_PRIMARY_URL_WITHOUT_PORT:-}" >> .env.temp
    echo "DDEV_PRIMARY_URL_PORT=${DDEV_PRIMARY_URL_PORT:-}" >> .env.temp
    echo "DDEV_SCHEME=${DDEV_SCHEME:-}" >> .env.temp
    echo "DDEV_HOSTNAME=${DDEV_HOSTNAME:-}" >> .env.temp
    echo "DDEV_HOST_HTTP_PORT=${DDEV_HOST_HTTP_PORT:-}" >> .env.temp
    echo "DDEV_HOST_HTTPS_PORT=${DDEV_HOST_HTTPS_PORT:-}" >> .env.temp
    echo "DDEV_ROUTER_HTTP_PORT=${DDEV_ROUTER_HTTP_PORT:-}" >> .env.temp
    echo "DDEV_ROUTER_HTTPS_PORT=${DDEV_ROUTER_HTTPS_PORT:-}" >> .env.temp
    echo "ℹ️  Wrote DDEV URL/port environment variables to .env.temp for PHP step"
  - |
    <?php
    # #ddev-description Detect services and create dynamic dependencies
    require_once('upsun/EnvironmentLoader.php');
    \Upsun\EnvironmentLoader::loadDdevEnvironment();

    require_once('upsun/ServiceDetector.php');
    $projectRoot = realpath('..');
    $detector = new \Upsun\ServiceDetector($projectRoot);
    $detector->detectAndCreateDependencies();
  - |
    <?php
    # #ddev-description Initialize Upsun configuration
    require_once('upsun/EnvironmentLoader.php');
    \Upsun\EnvironmentLoader::loadDdevEnvironment();

    require_once('upsun/install-hook.php');
  - |
    #ddev-description Copy .environment file to web-entrypoint.d if needed
    if [ -f ../.environment ]; then
      mkdir -p web-entrypoint.d
      echo "#ddev-generated" > web-entrypoint.d/environment.sh
      cat ../.environment >> web-entrypoint.d/environment.sh
      chmod +x web-entrypoint.d/environment.sh
      echo "✅ Copied .environment to web-entrypoint.d/environment.sh"
    else
      echo "ℹ️  No .environment file found to copy"
    fi
  - |
    <?php
    # #ddev-description Debug Upsun configuration parsing
    # require_once('upsun/debug-parser.php');

removal_actions:
  - |
    <?php
    # #ddev-description Remove Upsun-generated files
    echo "=== Upsun add-on removal cleanup ===\n";
    $files_to_remove = [
      'config.upsun.yaml',
      'web-build/Dockerfile.upsun',
      '.env.upsun-services',
      'web-entrypoint.d/environment.sh'
    ];
    
    foreach ($files_to_remove as $file) {
      if (file_exists($file)) {
        $content = file_get_contents($file);
        $isGenerated = strpos($content, '#ddev-generated') !== false || 
                      strpos($content, '# Upsun service versions (auto-generated') !== false;
        
        if ($isGenerated) {
          if (unlink($file)) {
            echo "✅ Removed: $file\n";
          } else {
            echo "❌ Failed to remove: $file\n";
          }
        } else {
          echo "⚠️  Skipped: $file (not auto-generated)\n";
        }
      } else {
        echo "ℹ️  Not found: $file\n";
      }
    }
    
    // Clean up empty web-build directory
    if (is_dir('web-build')) {
      $files = array_diff(scandir('web-build'), ['.', '..']);
      if (empty($files)) {
        if (rmdir('web-build')) {
          echo "✅ Removed empty directory: web-build\n";
        }
      }
    }
    echo "=== Cleanup completed ===\n";

ddev_version_constraint: '>= v1.24.8'
